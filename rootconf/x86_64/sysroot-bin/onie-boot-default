#!/bin/sh

this_script=$(basename $(realpath $0))
lib_dir="$(dirname $(realpath $0))/../lib/onie"

args="o:d:lhvq"

usage()
{
    echo "usage: $this_script [-d <menu entry>] [-o <onie_mode>] [-lhvq]"
    cat <<EOF
Get or set the default GRUB boot entry.  The default is to show
the current default entry.

You cannot specify both the -d and -o options at the same time.

COMMAND LINE OPTIONS

	-d
		Set the default GRUB boot entry to "menu entry".  You
		need to know the complete menu entry string.

	-o
		Set the default GRUB boot entry to a particular "ONIE
		mode".  Available ONIE modes are:

		install   -- ONIE OS installer mode
		rescue    -- ONIE rescue mode
		uninstall -- ONIE OS uninstall mode
		update    -- ONIE self update mode

                Some platforms may offer additional modes.  Check with
                your hardware vendor.

	-l
		List the current default entry.  This is the default.

	-h
		Help.  Print this message.

	-q
		Quiet.  No printing, except for errors.

	-v
		Be verbose.  Print what is happening.
EOF
}


default=
onie_mode=
list=
quiet=no
verbose=no
cmd_verbose=

while getopts "$args" a ; do
    case $a in
        h)
            usage
            exit 0
            ;;
        v)
            verbose=yes
            cmd_verbose=-v
            ;;
        l)
            list=yes
            ;;
        d)
            default="$OPTARG"
            ;;
        o)
            onie_mode="$OPTARG"
            ;;
        q)
            quiet=yes
            ;;
        *)
            echo "Unknown argument: $a"
            usage
            exit 1
    esac
done

[ "$verbose" = "yes" ] && quiet=no

if [ -n "$default" ] && [ -n "$onie_mode" ] ; then
    echo "ERROR: Only one of -d and -o can be specified at a time"
    usage
    exit 1
fi

[ -r "$lib_dir/onie-blkdev-common" ] || {
    echo "ERROR: Unable to find onie-blkdev-common"
    exit 1
}
. $lib_dir/onie-blkdev-common

[ "$verbose" = "yes" ] && echo "Mounting ONIE partitions ..."
onie_mount_partitions || {
    echo "ERROR: Unable to mount ONIE partitions"
    exit 1
}

if [ -z "$default" -a -z "$onie_mode" ] || [ "$list" = "yes" ] ; then
    # Find default image -- grub.cfg is constructed so that the effective
    # 'set default=' line appears last, even if the user manages to
    # specify earlier definitions.  Hence the use of 'tail -n 1' here.

    onie_grub_cfg="${onie_config_mnt}/grub.cfg"
    default_img=$(grep default= "$onie_grub_cfg" | tail -n 1 | sed -e 's/set//' -e 's/.*default=//' -e "s/['\"]//g")
    if [ -z "$default_img" ] ; then
        echo "WARNING: No defaut image specified.  Using first menu entry."
    else
        echo "Default boot image: $default_img"
    fi
    exit 0
fi

if [ -n "$onie_mode" ] ; then
    case "$onie_mode" in
        install|uninstall|rescue|update)
            [ "$verbose" = "yes" ] && echo "Setting ONIE mode to: $onie_mode"
            default='${onie_submenu}>${onie_menu_'"${onie_mode}}"
            ;;
        *)
            echo "ERROR: Unknown ONIE mode: $onie_mode"
            exit 1
    esac
fi

[ "$verbose" = "yes" ] && echo "Setting default GRUB menu entry to: $default"

[ "$verbose" = "yes" ] && echo "Creating $onie_config_mnt/grub_default"
(cat <<EOF
## Begin grub_default

set default="$default"

## End grub_default
EOF
) > $onie_config_mnt/grub_default

[ "$verbose" = "yes" ] && echo "Un-mounting ONIE partitions ..."
onie_umount_partitions

[ "$quiet" = "no" ] && echo "Success: Run \`onie-boot-update' to make changes take effect."
exit 0
