Always call board_reset() if it's defined

diff --git a/arch/powerpc/cpu/mpc85xx/cpu.c b/arch/powerpc/cpu/mpc85xx/cpu.c
index 9b9832c..2155c18 100644
--- a/arch/powerpc/cpu/mpc85xx/cpu.c
+++ b/arch/powerpc/cpu/mpc85xx/cpu.c
@@ -235,31 +235,37 @@ int checkcpu (void)
 
 int do_reset (cmd_tbl_t *cmdtp, int flag, int argc, char * const argv[])
 {
+#if defined(CONFIG_BOARD_RESET)
+	/* Attempt board-specific reset */
+	board_reset();
+#endif
+
 /* Everything after the first generation of PQ3 parts has RSTCR */
 #if defined(CONFIG_MPC8540) || defined(CONFIG_MPC8541) || \
     defined(CONFIG_MPC8555) || defined(CONFIG_MPC8560)
-	unsigned long val, msr;
+	{
+		unsigned long val, msr;
 
-	/*
-	 * Initiate hard reset in debug control register DBCR0
-	 * Make sure MSR[DE] = 1.  This only resets the core.
-	 */
-	msr = mfmsr ();
-	msr |= MSR_DE;
-	mtmsr (msr);
+		/*
+		 * Initiate hard reset in debug control register DBCR0
+		 * Make sure MSR[DE] = 1.  This only resets the core.
+		 */
+		msr = mfmsr ();
+		msr |= MSR_DE;
+		mtmsr (msr);
 
-	val = mfspr(DBCR0);
-	val |= 0x70000000;
-	mtspr(DBCR0,val);
+		val = mfspr(DBCR0);
+		val |= 0x70000000;
+		mtspr(DBCR0,val);
+	}
 #else
-	volatile ccsr_gur_t *gur = (void *)(CONFIG_SYS_MPC85xx_GUTS_ADDR);
-
-	/* Attempt board-specific reset */
-	board_reset();
+	{
+		volatile ccsr_gur_t *gur = (void *)(CONFIG_SYS_MPC85xx_GUTS_ADDR);
 
-	/* Next try asserting HRESET_REQ */
-	out_be32(&gur->rstcr, 0x2);
-	udelay(100);
+		/* Try asserting HRESET_REQ */
+		out_be32(&gur->rstcr, 0x2);
+		udelay(100);
+	}
 #endif
 
 	return 1;
