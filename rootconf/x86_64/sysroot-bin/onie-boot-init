#!/bin/sh

# Initialize the ONIE-CONFIG partition

this_script=$(basename $(realpath $0))
lib_dir="$(dirname $(realpath $0))/../lib/onie"
. $lib_dir/onie-blkdev-common

args="d:hvqf"

usage()
{
    echo "usage: $this_script [-d <block-device>] [-hvqf]"
    cat <<EOF
Initialize the ONIE-CONFIG partition for use.

The default is to determine the $onie_config_label partition by using the
file system label.

Alternatively the partition can be explicity stated using the -d
option.

COMMAND LINE OPTIONS

	-d
		Block device to use for the $onie_config_label partition.

	-h
		Help.  Print this message.

	-f
		Force.  Do not any confirmation questions, just do it.

	-q
		Quiet.  No printing, except for errors.

	-v
		Be verbose.  Print what is happening.
EOF
}


device=auto
force=no
quiet=no
verbose=no
clear=no
cmd_verbose=

while getopts "$args" a ; do
    case $a in
        h)
            usage
            exit 0
            ;;
        v)
            verbose=yes
            cmd_verbose=-v
            ;;
        d)
            device="$OPTARG"
            ;;
        q)
            quiet=yes
            ;;
        f)
            force=yes
            ;;
        *)
            echo "Unknown argument: $a"
            usage
            exit 1
    esac
done

[ "$verbose" = "yes" ] && quiet=no

if [ "$device" = "auto" ] ; then
    # Try to find existing ONIE-CONFIG partition
    device=$(blkid | grep "$onie_config_label" | sed -e 's/:.*$//')
    if [ -z "$device" ] ; then
        echo "ERROR: Unable to determine $onie_config_label partition.  Use -d option."
        exit 1
    fi
fi

[ -b "$device" ] || {
    echo "ERROR: Does not look like a valid block device: $device"
    exit 1
}

[ "$quiet" = "no" ] && echo "Creating $onie_config_fs_type file system on: $device"

# Point of no return -- check to be sure
if [ "$force" = "no" ] ; then
    echo -n "About to initialize $device.  Are you sure (y/N)? "
    read ans
    if [ "$ans" != "y" ] && [ "$ans" != "Y" ]; then
        echo "Aborting initialization operation."
	exit 0
    fi
fi

# Create file system on ONIE-CONFIG partition
mkfs.$onie_config_fs_type -q -L $onie_config_label $device || {
    echo "ERROR: Unable to create $onie_config_fs_type file system on: $device"
    exit 1
}

mkdir -p $onie_config_mnt
mount -o defaults,rw -t $onie_config_fs_type $device $onie_config_mnt || {
    echo "ERROR: Unable to mount $onie_config_label ($device) on ${onie_config_mnt}"
    exit 1
}

# Install skeletal grub.d from ONIE-BOOT/grub/ on $device
mkdir -p $onie_boot_mnt
mount -o defaults,ro -t $onie_boot_fs_type "LABEL=$onie_boot_label" $onie_boot_mnt || {
    echo "ERROR: Unable to mount $onie_boot_label on ${onie_boot_mnt}"
    exit 1
}

cp -a ${onie_boot_mnt}/grub/grub.d.skel $onie_config_mnt/grub.d  || {
    echo "ERROR: Problems copying files from ${onie_boot_mnt}/grub/grub.d.skel to $onie_config_mnt/grub.d"
    exit 1
}

umount $onie_boot_mnt || {
    echo "ERROR: Problems un-mounting $onie_boot_mnt"
    exit 1
}

umount $onie_config_mnt || {
    echo "ERROR: Problems un-mounting $onie_boot_mnt"
    exit 1
}

[ "$quiet" = "no" ] && echo "Success: ONIE boot configuration initialized."
exit 0

